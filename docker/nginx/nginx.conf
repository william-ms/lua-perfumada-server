worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    log_format custom '$remote_addr - $host [$time_local] "$request" '
                      'status=$status bytes=$body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';
    
    access_log /var/log/nginx/access.log custom;

    server {
        listen 443 ssl;
        http2 on;

        server_name localhost; 

        ssl_certificate /etc/nginx/ssl/cert.pem;        
        ssl_certificate_key /etc/nginx/ssl/key.pem;  

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off; 

        location / {
            proxy_pass http://server_node:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            set $cors_origin "";
    
            if ($http_origin ~* (https://localhost:8443|http://localhost:5173)) {
                set $cors_origin $http_origin;
            }

            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }
}